{
    "Comment": "A state machine that warm up a cloudfront distribution with a s3 bucket as origin.",
    "StartAt": "Parallel",
    "States": {
        "Parallel": {
            "Type": "Parallel",
            "Next": "Warm up edge locations in parallel",
            "Branches": [
                {
                    "StartAt": "Initialize DDB",
                    "States": {
                        "Initialize DDB": {
                            "Type": "Task",
                            "Resource": "${DdbInitializeFunctionArn}",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 2,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 2
                                }
                            ],
                            "End": true,
                            "ResultPath": null
                        }
                    }
                },
                {
                    "StartAt": "Extract edge codes",
                    "States": {
                        "Extract edge codes": {
                            "Type": "Task",
                            "Resource": "${EdgeCodeExtractorFunctionArn}",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 2,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 2
                                }
                            ],
                            "Next": "Prepare edge location metadata",
                            "ResultPath": "$.edge_code_file_key"
                        },
                        "Prepare edge location metadata": {
                            "Type": "Task",
                            "Resource": "${EdgeLocMetadataIntlrFunctionArn}",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 2,
                                    "MaxAttempts": 6,
                                    "BackoffRate": 2
                                }
                            ],
                            "End": true,
                            "ResultPath": null
                        }
                    }
                }
            ]
        },
        "Warm up edge locations in parallel": {
            "Type": "Map",
            "ItemProcessor": {
                "ProcessorConfig": {
                    "Mode": "DISTRIBUTED",
                    "ExecutionType": "STANDARD"
                },
                "StartAt": "Warm up single edge location",
                "States": {
                    "Warm up single edge location": {
                        "Type": "Task",
                        "Resource": "${EdgeLocHeatupFunctionArn}",
                        "Retry": [
                            {
                                "ErrorEquals": [
                                    "Lambda.ServiceException",
                                    "Lambda.AWSLambdaException",
                                    "Lambda.SdkClientException",
                                    "Lambda.TooManyRequestsException"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 6,
                                "BackoffRate": 2
                            }
                        ],
                        "End": true
                    }
                }
            },
            "Label": "Warmupedgelocationsinparallel",
            "MaxConcurrency": 1000,
            "End": true,
            "ItemReader": {
                "Resource": "arn:aws:states:::s3:getObject",
                "ReaderConfig": {
                    "InputType": "CSV",
                    "CSVHeaderLocation": "FIRST_ROW"
                },
                "Parameters": {
                    "Bucket.$": "$[0].edge_location_bucket",
                    "Key.$": "$[0].edge_location_Metadata_file_key"
                }
            }
        }
    }
}